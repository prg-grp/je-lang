package de.tuda.stg.battleshipLinkedList;

import jif.util.LinkedList;
import jif.util.List;

public final class GridPlayer2 [principal Alice] authority (Alice) {

    private static int gridSize = 5;

    private final List[{Alice->*; Alice<-*}] {Alice->*; Alice<-*} myGrid = new LinkedList();

    public int{Alice->_; Alice<-*} applyOppsGuess{Alice<-*}(final int{} location) where authority(Alice) {
        int result = 0;
        try {
            if (location >= 0) {
                if (!(Boolean) myGrid.get(location)) {
                    // Battleship absent
                    result = -1;
                } else {
                    // Battleship present / Battleship hit by the opponent
                    result = 1;
                    // Battleship hit by the opponent
                    myGrid.set(location, false);
                }
                if (allFalse()) {
                    // All battleships hit
                    result = 2;
                }
            }
        }
        catch (NullPointerException e) {}
        catch (ClassCastException e) { }
        catch (NoSuchElementException e) { }

        return result;
    }

    private boolean allFalse() {
        boolean allFalse = true;
        try {
            for (int i = 0; i < myGrid.size(); i++) {
                if ((Boolean) myGrid.get(i)) {
                    allFalse = false;
                    break;
                }
            }
        }
         catch (NullPointerException e) {}
         catch (ClassCastException e) { }
         catch (NoSuchElementException e) { }
        return allFalse;
    }

    public void initializeTheList() {
        myGrid.add(false);
        myGrid.add(false);
        myGrid.add(false);
        myGrid.add(true);
        myGrid.add(true);
    }
}
