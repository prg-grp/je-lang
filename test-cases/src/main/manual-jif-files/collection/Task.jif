public final class Task[label L] implements JifObject[L] {

    private int element = 5;

    /* public Task(int element) {
        this.element = element;
    } */

    public int run (Integer input) {
            // return input.intValue() + this.element;
            return 1;
    }

    public boolean{L;o} equals(IDComparable[L] o) {
             return equals(L, o);
    }

    public boolean{lbl;*lbl;L;o} equals(label lbl, IDComparable[lbl] o) {
    	if (o == null || !(o instanceof Task[lbl])) {
    	    return false;
    	} else {
    	    return false;
    	}
    }

    public int{L} hashCode() {
    	return 0;
    }

    public String{L} toString() {
    	return "string";
     }

}

// This works

/* public final class Task[label L] implements JifObject[L] {


    private int element = 5;

    public Task(int element) {
        this.element = element;
    }

    public int run (Integer input) {
            // return input.intValue() + this.element;
            return 1;
    }

    public boolean{L;o} equals(IDComparable[L] o) {
             return equals(L, o);
    }

    public boolean{lbl;*lbl;L;o} equals(label lbl, IDComparable[lbl] o) {
    	if (o == null || !(o instanceof Task[lbl])) {
    	    return false;
    	} else {
    	    return false;
    	}
    }

    public int{L} hashCode() {
    	return 0;
    }

    public String{L} toString() {
    	return "string";
     }

}
*/