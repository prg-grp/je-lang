final class SGXClass [principal Alice]  authority(Alice) {

	private String{Alice->*; Alice<-_} password;  // <S,U>


	// public String{Alice->_; Alice<-*} encrypt{Alice<-*} (String{_->_; _<-_} plaintext) where authority(Alice) {


	public void updatePassword {Alice<-*} (String{} currPass, String{} newPass) where authority(Alice) {
		if (checkPassword(currPass) == true) {
			password = newPass;
		}
	}

	public boolean {Alice->_; Alice<-*} checkPassword{Alice<-*} (String{} guess) where authority(Alice) {

		boolean {Alice->*; Alice<-*} result = false;

		String{Alice<-*} guessE = endorse(guess, {} to {Alice<-*});
		String{Alice->*; Alice<-*} passwordE = endorse(password, {Alice->*; Alice<-_} to {Alice->*; Alice<-*});

		try {
			result = passwordE.equals(guessE);

		} catch(Exception e) {}


		boolean {Alice->_; Alice<-*} result1 = declassify(result, {Alice->*; Alice<-*} to {Alice->_; Alice<-*});

		return result1;
	}
}