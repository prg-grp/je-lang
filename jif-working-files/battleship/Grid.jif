package Jifs;

// Enclave
public class Grid [principal Alice] authority(Alice) {

    // SECRET
    boolean{Alice->*; Alice<-*}[][]{Alice->*; Alice<-*} gridA;

    // Gateway
    public boolean{Alice->_; Alice<-*} applyGuessA{Alice<-*}(int{} x, int{} y) where authority(Alice) {
        int xE = endorse(x, {} to {Alice<-*});
        int yE = endorse(y, {} to {Alice<-*});
        boolean result = applyA(xE, yE);
        return declassify(result, {Alice->*; Alice<-*} to {Alice->_; Alice<-*});
    }

    private boolean{Alice->*; Alice<-*} applyA(int{Alice<-*} x, int{Alice<-*} y) {
        boolean b;
        {
            boolean z = false;
            try {
                z = gridA[x][y];
            } catch (NullPointerException e) {
            } catch (ArrayIndexOutOfBoundsException e) {
            }
            b = z;
        }
        return b;
    }
}
